# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    resource_class: xlarge
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.8-node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - add_ssh_keys:
          fingerprints:
            - "a1:22:8b:da:c9:9f:88:db:be:cb:1d:c5:12:de:70:4f"

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            npm install electron@1.8.4 orca
            pip install -r requirements.txt
            echo 'export PATH="/home/circleci/repo/node_modules/.bin:$PATH"' >> $BASH_ENV
            sudo apt-get install -y poppler-utils libxtst6 xvfb libgtk2.0-0 libgconf-2-4 libnss3 libasound2

      - save_cache:
          paths:
            - ./venv
            - ./node_modules
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: make html
          command: |
            . venv/bin/activate
            echo ${mapbox_token} > python/.mapbox_token
            make -kj8 || make -kj8
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              cd build/html
              git init
              git config user.name nicolaskruchten
              git config user.email nicolas@plot.ly
              git add *
              git commit -m build
              git push --force git@github.com:plotly/plotly.py-docs.git master:built
              rm -rf .git
              cd ../..
            fi
            tar -zcf build/html.tgz build/html
            rm -rf build/html build/ipynb


      - store_artifacts:
          path: build
          destination: build
